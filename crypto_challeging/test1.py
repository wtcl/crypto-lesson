# 脚本2
from Crypto.Util.number import long_to_bytes

# n =155266493936043103849855199987896813716831986416707080645036022909153373110367007140301635144950634879983289720164117794783088845393686109145443728632527874768524615377182297125716276153800765906014206797548230661764274997562670900115383324605843933035314110752560290540848152237316752573471110899212429555149
# e =3
# c =124929943232081828105808318993257526364596580021564021377503915670544445679836588765369503919311404328043203272693851622132258819278328852726005776082575583793735570095307898828254568015886630010269615546857335790791577865565021730890364239443651479580968112031521485174068731577348690810906553798608040451024
c=48641173720475702278690317652676924796340996697567087705119344461991930773386153198223372579328462635803653561516674380209276666328375805315553713680858906705068657158073776194628700821011001144559278784795978097710145192236347629751116534400207288736776545247409895672030976932673010818369814246455196991083
n=90058705186558569935261948496132914380077312570281980020033760044382510933070450931241348678652103772768114420567119848142360867111065753301402088676701668212035175754850951897103338079978959810673297215370534716084813732883918187890434411552463739669878295417744080700424913250020348487161014643951785502867
e=46786465362686334917265996843779843233606992585424976481745055335468678697948774988450305612127967926533923268260412557000125153569622340353246096040604284883505587337829322949633637609180797447754513992039018904786537115087888005528547900640339270052628915440787357271345416818313808448127098885767015748889

# 将分数x/y展开为连分数的形式
def transform(x, y):
    arr = []
    while y:
        arr += [x // y]
        x, y = y, x % y
    return arr


# 求解渐进分数
def sub_fraction(k):
    x = 0
    y = 1
    for i in k[::-1]:
        x, y = y, x + i * y
    return (y, x)


data = transform(e, n)

for x in range(1, len(data) + 1):
    data1 = data[:x]
    d = sub_fraction(data1)[1]
    m = pow(c, d, n)
    flag = long_to_bytes(m)
    print(flag)
